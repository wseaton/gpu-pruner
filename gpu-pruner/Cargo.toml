[package]
name = "gpu-pruner"
version.workspace = true
edition.workspace = true

[[bin]]
name = "gpu-pruner"
path = "src/main.rs"

[[bin]]
name = "querytest"
path = "src/bin/querytest.rs"


[features]
default = ["otel"]
otel = ["opentelemetry", "opentelemetry_sdk", "opentelemetry-appender-tracing", "opentelemetry-semantic-conventions", "opentelemetry-otlp", "tracing-opentelemetry"]

[dependencies]

resources = { path = "../resources" }

kube.workspace = true
k8s-openapi.workspace = true

tokio.workspace = true
tracing.workspace = true
tracing-subscriber.workspace = true
serde.workspace = true
serde_json.workspace = true

anyhow = "1.0.86"
prometheus-http-query = "0.8.3"
reqwest = "0.12.4"

clap = { version = "4.5.4", features = ["derive"] }
minijinja = "2.0.3"

secrecy = "0.8.0"
uuid = {version = "1", features = ["v7", "v4"]}
serde_yaml = "*"
is-terminal = "0.4.13"
thiserror.workspace = true
futures.workspace = true
chrono.workspace = true

# OTEL 
opentelemetry = { version = "0.26", features = ["trace", "metrics"], optional = true}
opentelemetry_sdk = { version = "0.26", features = ["trace", "rt-tokio", "metrics", "logs_level_enabled"], optional = true}
opentelemetry-appender-tracing = {version = "0.26.0" , optional = true}
opentelemetry-semantic-conventions = {version = "0.26.0", optional = true}
opentelemetry-otlp = {version = "0.26.0", features = ["tonic", "metrics"], optional = true}
tracing-opentelemetry = {version = "0.27.0", features = ["metrics"], optional = true}

once_cell = "1.19.0"
prettytable = "0.10.0"
csv = "1.3.0"
